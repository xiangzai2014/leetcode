/*
题目描述

小B最近对破解和程序攻击产生了兴趣，她迷上了病毒，然后可怕的事情就发生了。不知道什么原因，可能是小B的技术水平还不够高，小B编写的病毒程序在攻击一个服务器时出现了问题
。尽管成功的侵入了服务器，但并没有按照期望的方式发挥作用。
小B的目的很简单:控制服务器的内存区域，试图在内存中装入从1到n之间的n个自然数，以覆盖内存区域。可能是小B对编程理解上的问题，病毒似乎没有完全成功。
可能是由于保护机制的原因，内存写入只接受二进制的形式，所以十进制表达中除0和1之外的其他值都没有成功写入内存。小B希望知道，究竟有多少数成功的写入了服务器的内存！
输入
输入中有多组测试数据。每组测试数据在单独的一行中，为整数n(1< =n < =10^9)。
输出
对每组测试数据，在单独的行中输出问题的答案。
样例输入
10
20
样例输出
2
3
*/
/**
解题思路
输入一个整数n，统计从1到n有多少符合二进制形式的数。想法很简单，n包含的个数和小于n最大的二进制形式的整数包含个数是一样的，而二进制形式的数包含的个数其实就是对应二进制数的值。
这样，求解过程就是将n化为小于它的最大整数二进制形式，再计算对应二进制的值。
*/
#include <iostream>
#include <math.h>
#include <string>
using namespace std;

int main(){
  string n;
  while(cin >> n){
    int res = 0;
    for(size_t i = 0; i < n.size(); i ++){
      if(n[i] > '1'){
        res += pow(2, n.size()-i) - 1;
        break;
      }
      else if(n[i] == '1'){
        res += pow(2, n.size()-i-1);
      }
    }
    cout << res << endl;
  }
  return 0;
}

//1 10 11 100 101 110 111
