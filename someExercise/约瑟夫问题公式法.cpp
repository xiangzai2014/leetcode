/***
题目：
n个人围成一个圈，每个人分别标注为1、2、...、n，要求从1号从1开始报数，报到k的人出圈，接着下一个人又从1开始报数，如此循环，直到只剩最后一个人时，该人即为胜利者。
例如当n=10,k=4时，依次出列的人分别为4、8、2、7、3、10，9、1、6、5，则5号位置的人为胜利者。给定n个人，请你编程计算出最后胜利者标号数。（要求用单循环链表完成。）
第一行为人数n;
第二行为报数k
10
4
***/
/***
现在假设n=10
0 1 2 3  4 5 6 7 8 9
k=3
第一个人出列后的序列为：
 0 1 3 4 5 6 7 8 9
即:  3 4 5 6 7 8 9 0 1（1式）

我们把该式转化为: 0 1 2 3 4 5 6 7 8 (2式)
则你会发现: （(2式)+3）%10则转化为(1式)了

 也就是说，我们求出9个人中第9次出环的编号，最后进行上面的转换就能得到10个人第10次出环的编号了
 设f(n,k,i)为n个人的环，报数为k，第i个人出环的编号，则f(10,3,10)是我们要的结果

 当i=1时，  f(n,k,i) = (n+k-1)%n
 当i!=1时，  f(n,k,i)= ( f(n-1,k,i-1)+k )%n
 递推公式：
 f(1)=0;
 f(i)=(f[i-1]+k)%i;(i>1)
***/

#include <iostream>
using namespace std;

int main(){
  int n, k, s = 0;//s表示的是上一轮的结果，k代表是每多少个人出列一次，i代表当前已经出列了多少个人。
  cin >> n >> k;
  for(int i = 2; i <= n; i ++){
    s = (s + k) % i;
  }
  cout << s+1 << endl;
  return 0;
}
